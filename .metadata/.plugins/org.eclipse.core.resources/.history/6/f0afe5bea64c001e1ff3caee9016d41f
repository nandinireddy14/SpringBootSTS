package cgg.spring.securitydb.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

import cgg.spring.securitydb.services.CustomUserDetailsService;

@Configuration
public class MySecurityConfig {

	@Autowired
	private CustomUserDetailsService customUserDetailsService;
	
	public SecurityFilterChain filterChain(HttpSecurity httpSecurity) throws Exception{
		httpSecurity.csrf().disable().authorizeHttpRequests().requestMatchers("/signin").permitAll()
		.requestMatchers("/logout").permitAll()
		.requestMatchers("/public/**").hasRole("NORMAL")
		.requestMatchers("/users/**").hasRole("ADMIN")
		.anyRequest()
		.authenticated()
		.and()
		.formLogin()
		.loginPage("/signin")
		.loginProcessingUrl("/dologin")
		.defaultSuccessUrl("/users/");
		
		return httpSecurity.build();
	}
	
	public BCryptPasswordEncoder passwordEncoder() {
		return new BCryptPasswordEncoder();
	}
}
