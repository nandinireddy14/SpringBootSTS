package cgg.spring.restserver.exceptions;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RestControllerAdvice;

import cgg.spring.restserver.payload.ApiResponse;

@RestControllerAdvice
public class GlobalExceptionHandler {

//	@ExceptionHandler(MethodArgumentNotValidException.class)
//	public ResponseEntity<Map<String,String>> handleMethodArgsNotValidException(MethodArgumentNotValidException e){
//		Map<String,String> resp=new HashMap<>();
//		e.getBindingResult().getAllErrors().forEach(error->{
//			String fieldName=((FieldError) error).getField();
//			String message = error.getDefaultMessage();
//			resp.put(fieldName, message);
//		});
//		return new ResponseEntity<Map<String,String>>(resp,HttpStatus.BAD_REQUEST);
//	}
	
	public ResponseEntity<ApiResponse> resourceNotFoundExceptionHandler(ResourceNotFoundException e){
		String message = e.getMessage();
		ApiResponse apiResponse = new ApiResponse(message,false);
		return new ResponseEntity<ApiResponse>(apiResponse,HttpStatus.NOT_FOUND);
		
		
	}
	
	
}
